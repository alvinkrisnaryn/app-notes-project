(()=>{var n={19:()=>{class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.render()}render(){this.shadowRoot.innerHTML='\n      <style>\n        .note-form {\n          display: flex;\n          flex-direction: column;\n          gap: 10px;\n          max-width: 400px;\n          margin: 0 auto;\n          padding: 15px;\n          background: white;\n          border-radius: 8px;\n          box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\n        }\n        .note-form input,\n        .note-form textarea {\n          padding: 8px;\n          border: 1px solid #ccc;\n          border-radius: 5px;\n          font-size: 16px;\n        }\n        .note-form button {\n          background-color: #28a745;\n          color: white;\n          border: none;\n          padding: 10px;\n          cursor: pointer;\n          border-radius: 5px;\n        }\n        .note-form button:hover {\n          background-color: #218838;\n        }\n      </style>\n      <form class="note-form">\n        <label>Judul:</label>\n        <input type="text" id="title" placeholder="Judul Catatan" required />\n        <label>Isi Catatan:</label>\n        <textarea id="body" placeholder="Isi Catatan" rows="5" required></textarea>\n        <button type="submit">Tambah Catatan</button>\n      </form>\n    ',this.shadowRoot.querySelector(".note-form").addEventListener("submit",(n=>{n.preventDefault();const e=this.shadowRoot.querySelector("#title").value,t=this.shadowRoot.querySelector("#body").value;this.dispatchEvent(new CustomEvent("add-note",{detail:{title:e,body:t},bubbles:!0,composed:!0})),this.shadowRoot.querySelector(".note-form").reset()}))}}customElements.define("note-form",n)},56:(n,e,t)=>{"use strict";n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},72:n=>{"use strict";var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],s=0;s<n.length;s++){var d=n[s],c=o.base?d[0]+o.base:d[0],l=a[c]||0,p="".concat(c," ").concat(l);a[c]=l+1;var u=t(p),f={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)e[u].references++,e[u].updater(f);else{var m=r(f,o);o.byIndex=s,e.splice(s,0,{identifier:p,updater:m,references:1})}i.push(p)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=t(a[i]);e[s].references--}for(var d=o(n,r),c=0;c<a.length;c++){var l=t(a[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=d}}},113:n=>{"use strict";n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},130:()=>{class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}set noteData(n){this._note=n,this.render()}render(){this._note&&(this.shadowRoot.innerHTML=`\n      <style>\n        .note {\n          background: white;\n          padding: 15px;\n          border-radius: 8px;\n          box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.1);\n          display: flex;\n          flex-direction: column;\n        }\n        .delete-btn {\n          background-color: #ff4d4d;\n          color: white;\n          border: none;\n          padding: 8px 12px;\n          cursor: pointer;\n          border-radius: 5px;\n          align-self: flex-end;\n          margin-top: 10px;\n        }\n        .delete-btn:hover {\n          background-color: #cc0000;\n        }\n      </style>\n      <div class="note">\n        <h3>${this._note.title}</h3>\n        <p>${this._note.body}</p>\n        <button class="delete-btn" data-id="${this._note.id}">Hapus</button>\n      </div>\n    `,this.shadowRoot.querySelector(".delete-btn").addEventListener("click",(()=>{this.dispatchEvent(new CustomEvent("delete-note",{detail:this._note.id,bubbles:!0,composed:!0}))})))}}customElements.define("note-item",n)},314:n=>{"use strict";n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(i[d]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);o&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},540:n=>{"use strict";n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},601:n=>{"use strict";n.exports=function(n){return n[1]}},659:n=>{"use strict";var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},825:n=>{"use strict";n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},919:(n,e,t)=>{"use strict";t.d(e,{A:()=>s});var o=t(601),r=t.n(o),a=t(314),i=t.n(a)()(r());i.push([n.id,'body {\n  font-family: Arial, sans-serif;\n  background-color: #f4f4f4;\n  margin: 0;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\nh1 {\n  text-align: center;\n  padding: 20px;\n  text-transform: uppercase;\n}\n\n#app {\n  max-width: 600px;\n  width: 100%;\n  background: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\n}\n\n#note-form {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n#note-form input,\n#note-form textarea {\n  width: 96%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n  font-size: 16px;\n}\n\n#note-form button {\n  background-color: #28a745;\n  color: white;\n  border: none;\n  padding: 10px;\n  cursor: pointer;\n  border-radius: 5px;\n  font-size: 16px;\n  transition: background 0.3s;\n}\n\n#note-form button:hover {\n  background-color: #218838;\n}\n\n#notes-list {\n  margin-top: 20px;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 15px;\n}\n\n.note-item {\n  background: white;\n  padding: 15px;\n  border-radius: 8px;\n  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.1);\n  display: flex;\n  flex-direction: column;\n}\n\n.note-item h3 {\n  margin: 0;\n  font-size: 18px;\n}\n\n.note-item p {\n  margin: 5px 0;\n  color: #555;\n}\n\n.delete-btn {\n  background-color: #ff4d4d;\n  color: white;\n  border: none;\n  padding: 8px 12px;\n  cursor: pointer;\n  border-radius: 5px;\n  align-self: flex-end;\n  margin-top: 10px;\n  transition: background 0.3s;\n}\n\n.delete-btn:hover {\n  background-color: #cc0000;\n}\n\n#notes-list p {\n  text-align: left;\n  padding-top: 15px;\n  font-size: 16px;\n  color: gray;\n}\n\n#notes-list > p {\n  text-align: center;\n  padding: 0;\n}\n\n@media (max-width: 768px) {\n  #app {\n    width: 90%;\n  }\n}\n\n#notes-list .loading {\n  text-align: center;\n}\n\n#notes-list .loading::after {\n  content: "⏳";\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n',""]);const s=i}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{"use strict";const n="https://notes-api.dicoding.dev/v2",e={async getNotes(){const e=await fetch(`${n}/notes`);return(await e.json()).data},async addNote(e,t){const o=await fetch(`${n}/notes`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({title:e,body:t})});return(await o.json()).message},async deleteNote(e){const t=await fetch(`${n}/notes/${e}`,{method:"DELETE"});return(await t.json()).message}};t(130);class o extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}set notes(n){this._notes=n,this.render()}connectedCallback(){this.render()}render(){if(!this._notes)return;this.shadowRoot.innerHTML='\n      <style>\n        .note-list {\n          display: grid;\n          grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n          gap: 15px;\n          padding: 0;\n          list-style: none;\n        }\n      </style>\n      <div class="note-list"></div>\n    ';const n=this.shadowRoot.querySelector(".note-list");this._notes.forEach((e=>{const t=document.createElement("note-item");t.noteData=e,n.appendChild(t)}))}}customElements.define("note-list",o);const r={showLoading(){document.getElementById("notes-list").innerHTML="<p>⏳ Memuat catatan...</p>"},hideLoading(){document.getElementById("notes-list").innerHTML=""},async renderNotes(){this.showLoading();try{const n=await e.getNotes();this.hideLoading();const t=document.getElementById("notes-list");if(t.innerHTML="",0===n.length)return void(t.innerHTML="<p>📂 Tidak ada catatan.</p>");const o=document.createElement("note-list");o.notes=n,t.appendChild(o)}catch(n){document.getElementById("notes-list").innerHTML="<p>❌ Gagal memuat catatan.</p>"}}};var a=t(72),i=t.n(a),s=t(825),d=t.n(s),c=t(659),l=t.n(c),p=t(56),u=t.n(p),f=t(540),m=t.n(f),h=t(113),x=t.n(h),g=t(919),b={};b.styleTagTransform=x(),b.setAttributes=u(),b.insert=l().bind(null,"head"),b.domAPI=d(),b.insertStyleElement=m(),i()(g.A,b),g.A&&g.A.locals&&g.A.locals,t(19),document.addEventListener("DOMContentLoaded",(async()=>{await r.renderNotes()})),document.body.addEventListener("add-note",(async n=>{const{title:t,body:o}=n.detail;if(t&&o){r.showLoading();try{await e.addNote(t,o),await r.renderNotes()}catch(n){console.error("Gagal menambahkan catatan:",n)}finally{r.hideLoading()}}})),document.getElementById("notes-list").addEventListener("delete-note",(async n=>{const t=n.detail;if(confirm("Apakah Anda yakin ingin menghapus catatan ini?")){r.showLoading();try{await e.deleteNote(t),await r.renderNotes()}catch(n){console.error("Gagal menghapus catatan:",n)}finally{r.hideLoading()}}}))})()})();